{"version":3,"sources":["webpack:///src/app/pages/departments/departments-routing.module.ts","webpack:///src/app/pages/departments/departments.component.ts","webpack:///src/app/pages/departments/departments.component.html","webpack:///src/app/pages/departments/departments.module.ts"],"names":["routes","path","component","data","title","DepartmentsRoutingModule","forChild","imports","exports","DepartmentsComponent","injector","isLoading","add","dep_id","departmentForm","fb","group","label","compose","required","number","getDepartments","item","console","log","departmentService","removeDepartment","id","subscribe","res","err","utilService","showConnectionErrorToast","j","setValue","dataSource","content","form","f","authService","currentUser","company_id","addDepartment","resetForm","document","getElementById","click","showAddedSuccessfullyToast","updateDepartment","selector","templateUrl","styleUrls","DepartmentsModule","declarations"],"mappings":"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","file":"pages-departments-departments-module-es5.js","sourcesContent":["import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\nimport {DepartmentsComponent} from './departments.component';\n\n\nconst routes: Routes = [{\n    path: '',\n    component: DepartmentsComponent,\n    data: {\n        title: 'Department'\n    }\n}];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class DepartmentsRoutingModule {\n}\n","import {Component, Injector, OnInit} from '@angular/core';\nimport DataSource from 'devextreme/data/data_source';\nimport {BaseComponent} from '../../../@calls/components/base/base.component';\nimport {Validators} from '@angular/forms';\n\n@Component({\n    selector: 'app-departments',\n    templateUrl: './departments.component.html',\n    styleUrls: ['./departments.component.scss']\n})\nexport class DepartmentsComponent extends BaseComponent implements OnInit {\n    dataSource: any;\n    departmentForm: any;\n    isLoading = false;\n    add = true;\n    dep_id = '';\n\n    constructor(injector: Injector) {\n        super(injector);\n        this.departmentForm = this.fb.group({\n            label: ['', Validators.compose([Validators.required])],\n            number: ['+18654128481', Validators.compose([Validators.required])]\n        });\n    }\n\n    ngOnInit(): void {\n        this.getDepartments();\n    }\n\n    deleteItem(item): void {\n        console.log(item);\n        this.isLoading = true;\n        this.departmentService.removeDepartment(item.id).subscribe((res) => {\n            console.log(res);\n            this.getDepartments();\n            this.isLoading = false;\n        }, (err) => {\n            console.log(err);\n            this.isLoading = false;\n            this.utilService.showConnectionErrorToast();\n        });\n    }\n\n    resetForm() {\n        const j = {\n            label: '',\n            number: '+18654128481'\n        };\n        this.departmentForm.setValue(j);\n        this.add = true;\n    }\n\n    getDepartments(): void {\n        this.departmentService.getDepartments().subscribe((res) => {\n            this.dataSource = new DataSource(res.content.data);\n        });\n    }\n\n    updateItem(data): void {\n        this.add = false;\n        const j = {\n            label: data.label,\n            number: data.number\n        };\n        this.dep_id = data.id;\n        this.departmentForm.setValue(j);\n    }\n\n    addDepartment(form, f): void {\n        this.isLoading = true;\n        form['company_id'] = this.authService.currentUser.company_id;\n        if (this.add) {\n            this.departmentService.addDepartment(form).subscribe((res) => {\n                console.log(res);\n                this.isLoading = false;\n                f.resetForm();\n                this.getDepartments();\n                document.getElementById('close').click();\n                this.utilService.showAddedSuccessfullyToast();\n            }, (err) => {\n                this.isLoading = false;\n                console.log(err);\n                this.utilService.showConnectionErrorToast();\n            });\n        } else {\n            form['id'] = this.dep_id;\n            this.departmentService.updateDepartment(form).subscribe((res) => {\n                console.log(res);\n                this.isLoading = false;\n                f.resetForm();\n                this.getDepartments();\n                document.getElementById('close').click();\n                this.utilService.showAddedSuccessfullyToast();\n            }, (err) => {\n                this.isLoading = false;\n                console.log(err);\n                this.utilService.showConnectionErrorToast();\n            });\n        }\n    }\n}\n","<div class=\"row header-row\">\n    <div class=\"col-9 row\"></div>\n    <div class=\"col-3 float-end\">\n        <dx-button *ngIf=\"authService.currentUser.type === 'admin'\"\n                   data-toggle=\"modal\" data-target=\"#side-modal-r\"\n                   class=\"add-btn\"\n                   icon=\"add\"\n                   stylingMode=\"text\"\n                   text=\" Add Department\"\n                   (onClick)=\"resetForm()\"\n                   type=\"normal\">\n        </dx-button>\n    </div>\n</div>\n<dx-data-grid class=\"datagrid\" [dataSource]=\"dataSource\"\n              [showBorders]=\"true\"\n              [showRowLines]=\"true\">\n    <dxo-remote-operations\n            [groupPaging]=\"true\">\n    </dxo-remote-operations>\n    <dxo-pager\n            [showPageSizeSelector]=\"true\"\n            [allowedPageSizes]=\"[5, 10, 25, 50, 100]\"\n    ></dxo-pager>\n    <dxo-sorting mode=\"multiple\"></dxo-sorting>\n    <dxo-filter-row></dxo-filter-row>\n    <dxo-header-filter></dxo-header-filter>\n    <dxi-column dataField=\"label\" caption=\"Label\" alignment=\"center\"\n                [allowSorting]=\"true\"></dxi-column>\n    <dxi-column dataField=\"number\" caption=\"Number\" alignment=\"center\"\n                [allowSorting]=\"true\"></dxi-column>\n    <dxi-column *ngIf=\"authService.currentUser.type === 'super_admin'\" dataField=\"company.companyName\"\n                caption=\"Company Name\" alignment=\"center\"\n                [allowSorting]=\"true\"></dxi-column>\n    <dxi-column [width]=\"100\" dataField=\"actions\" caption=\"Actions\" alignment=\"center\" cellTemplate=\"actionTemplate\"\n                [allowSorting]=\"true\"></dxi-column>\n    <div *dxTemplate=\"let r of 'actionTemplate'\">\n        <dx-button class=\"remove-btn\" icon=\"minus\" (onClick)=\"deleteItem(r.data)\">\n        </dx-button>\n        <dx-button class=\"update-btn\" icon=\"edit\" (onClick)=\"updateItem(r.data)\" data-toggle=\"modal\"\n                   data-target=\"#side-modal-r\">\n        </dx-button>\n    </div>\n</dx-data-grid>\n\n\n<div class=\"modal slide-in-right modal-right fade \" id=\"side-modal-r\">\n    <div class=\"modal-dialog\" role=\"document\">\n        <div class=\"modal-content\">\n            <div class=\"side-modal-wrapper\">\n                <div class=\"vertical-align\">\n                    <div class=\"table-cell\">\n                        <div class=\"pdd-horizon-15\">\n                            <h4>{{add ? 'Add' : 'Update'}}Department</h4>\n                            <p class=\"mrg-btm-15 font-size-13\">Enter this details to {{add ? 'Add' : 'Update'}}\n                                department</p>\n                            <form [formGroup]=\"departmentForm\" #f=\"ngForm\"\n                                  (ngSubmit)=\"departmentForm.valid && addDepartment(departmentForm.value, f)\">\n                                <div class=\"form-group\">\n                                    <input formControlName=\"label\" type=\"text\" class=\"form-control\" placeholder=\"Name\">\n                                </div>\n                                <div class=\"form-group\">\n                                    <input disabled formControlName=\"number\" type=\"tel\" class=\"form-control\"\n                                           placeholder=\"Call Number\">\n                                </div>\n                                <button type=\"submit\" class=\"btn btn-info btn-sm\">{{add ? 'Add' : 'Update'}}</button>\n                                <a id=\"close\" style=\"visibility: hidden\" href=\"\" data-dismiss=\"modal\"\n                                   class=\"btn btn-info\">Close!</a>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<app-loader *ngIf=\"isLoading\"></app-loader>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DepartmentsRoutingModule } from './departments-routing.module';\nimport {DepartmentsComponent} from './departments.component';\nimport {SharedModule} from '../../shared/shared.module';\n\n\n@NgModule({\n  declarations: [DepartmentsComponent],\n  imports: [\n    CommonModule,\n    DepartmentsRoutingModule,\n    SharedModule\n  ]\n})\nexport class DepartmentsModule { }\n"]}