{"version":3,"sources":["./src/app/pages/companies/add-company/add-company-routing.module.ts","./src/app/pages/companies/add-company/add-company.component.ts","./src/app/pages/companies/add-company/add-company.component.html","./src/app/pages/companies/add-company/add-company.module.ts"],"names":[],"mappings":"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","file":"pages-companies-add-company-add-company-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport {AddCompanyComponent} from './add-company.component';\r\n\r\n\r\nconst routes: Routes = [{\r\n  path: '',\r\n  component: AddCompanyComponent,\r\n  data: {\r\n    title: 'Add Company'\r\n  }\r\n}];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AddCompanyRoutingModule { }\r\n","import {Component, Injector, OnInit, ViewChild} from '@angular/core';\r\nimport {FormBuilder, Validators} from '@angular/forms';\r\nimport {BaseComponent} from '../../../../@calls/components/base/base.component';\r\nimport {NgForm} from '@angular/forms';\r\n\r\n@Component({\r\n    selector: 'app-add-company',\r\n    templateUrl: './add-company.component.html',\r\n    styleUrls: ['./add-company.component.scss']\r\n})\r\nexport class AddCompanyComponent extends BaseComponent implements OnInit {\r\n    form: any;\r\n    isLoading = false;\r\n    isEdit = false;\r\n    data: any;\r\n    @ViewChild('ngForm') mytemplateForm: NgForm;\r\n    errors = [];\r\n\r\n    constructor(injector: Injector) {\r\n        super(injector);\r\n        if (this.router.getCurrentNavigation().extras.state) {\r\n            this.data = this.router.getCurrentNavigation().extras.state.data;\r\n            this.isEdit = true;\r\n        }\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.initComponent();\r\n    }\r\n\r\n    initComponent(): void {\r\n        this.form = this.fb.group({\r\n            email: ['', Validators.required],\r\n            password: ['', Validators.required],\r\n            username: ['', Validators.required],\r\n            login_id: ['', Validators.required],\r\n            type: ['admin', Validators.required],\r\n            companyName: ['', Validators.required]\r\n        });\r\n        if (this.isEdit) {\r\n            const j = {\r\n                email: this.data.email,\r\n                password: this.data.password,\r\n                username: this.data.username,\r\n                login_id: this.data.login_id,\r\n                type: 'admin',\r\n                companyName: this.data.companyName\r\n            };\r\n            // this.dep_id = data.id;\r\n            this.form.setValue(j);\r\n        }\r\n    }\r\n\r\n    register(form, ngForm) {\r\n        this.errors = [];\r\n        this.isLoading = true;\r\n        if (this.isEdit) {\r\n            form['id'] = this.data.id;\r\n            form['user_id'] = this.data.user_id;\r\n            this.authService.updateCompany(form).subscribe((res) => {\r\n                if (res.result === 'success') {\r\n                    this.isLoading = false;\r\n                    /* ngForm.resetForm();\r\n                    this.form.onReset(); */\r\n                    this.mytemplateForm.reset();\r\n                    this.utilService.showAddedSuccessfullyToast();\r\n                    this.router.navigateByUrl('pages/companies').then();\r\n                } else {\r\n                    const error = res.error_description;\r\n                    let key;\r\n                    this.isLoading = false;\r\n                    for (key in error) {\r\n                        if (typeof error[key] === 'string') {\r\n                            if (error[key] !== 'error') {\r\n                                this.errors.push(error[key]);\r\n                            }\r\n                        } else if (typeof error[key] === 'object') {\r\n                            if (error[0] === 'error') {\r\n                                this.errors.push('LoginID already exist !');\r\n                            } else {\r\n                                this.errors.push(error[key][0]);\r\n                            }\r\n                        } else {\r\n                            this.errors.push('LoginID already exist !');\r\n                        }\r\n                    }\r\n                }\r\n            }, (err) => {\r\n                console.log(err);\r\n                this.isLoading = false;\r\n                this.utilService.showConnectionErrorToast();\r\n            });\r\n        } else {\r\n            this.authService.register(form).subscribe((res) => {\r\n                if (res.result === 'success') {\r\n                    this.isLoading = false;\r\n                    /* ngForm.resetForm();\r\n                    this.form.onReset(); */\r\n                    this.mytemplateForm.reset();\r\n                    this.utilService.showAddedSuccessfullyToast();\r\n                    this.router.navigateByUrl('pages/companies');\r\n                } else {\r\n                    const error = res.error_description;\r\n                    let key;\r\n                    this.isLoading = false;\r\n                    for (key in error) {\r\n                        if (typeof error[key] === 'string') {\r\n                            if (error[key] !== 'error') {\r\n                                this.errors.push(error[key]);\r\n                            }\r\n                        } else if (typeof error[key] === 'object') {\r\n                            if (error[0] === 'error') {\r\n                                this.errors.push('LoginID already exist !');\r\n                            } else {\r\n                                this.errors.push(error[key][0]);\r\n                            }\r\n                        } else {\r\n                            this.errors.push('LoginID already exist !');\r\n                        }\r\n                    }\r\n                }\r\n            }, (err) => {\r\n                console.log(err);\r\n                this.isLoading = false;\r\n                this.utilService.showConnectionErrorToast();\r\n            });\r\n        }\r\n    }\r\n}\r\n","<div>\r\n    <form class=\"ng-pristine ng-valid row\" [formGroup]=\"form\" #ngForm=\"ngForm\"\r\n          (ngSubmit)=\"form.valid && register(form.value, ngForm)\">\r\n        <div class=\"form-group col-md-6\">\r\n            <input formControlName=\"username\" type=\"text\" class=\"form-control\"\r\n                   [placeholder]=\"'addCompany.username' | translate\">\r\n        </div>\r\n        <div class=\"form-group col-md-6\">\r\n            <input formControlName=\"login_id\" type=\"text\" class=\"form-control\"\r\n                   [placeholder]=\"'addCompany.loginId' | translate\">\r\n        </div>\r\n        <div class=\"form-group col-md-12\">\r\n            <input formControlName=\"companyName\" type=\"text\" class=\"form-control\"\r\n                   [placeholder]=\"'addCompany.companyName' | translate\">\r\n        </div>\r\n        <div class=\"form-group col-md-6\">\r\n            <input formControlName=\"email\" type=\"email\" class=\"form-control\"\r\n                   [placeholder]=\"'addCompany.email' | translate\">\r\n        </div>\r\n        <div class=\"form-group col-md-6\">\r\n            <input formControlName=\"password\" type=\"password\" class=\"form-control\"\r\n                   [placeholder]=\"'addCompany.password' | translate\">\r\n        </div>\r\n        <div class=\"mrg-top-20 width-100 text-right\">\r\n            <button type=\"submit\" class=\"btn btn-info\">{{(isEdit ? 'addCompany.updateCompany' : 'addCompany.createCompany') | translate}}</button>\r\n        </div>\r\n    </form>\r\n    <div class=\"errors\" *ngIf=\"errors.length\">\r\n        <h2>Errors:</h2>\r\n        <p class=\"error\" *ngFor=\"let item of errors\">{{item}}</p>\r\n    </div>\r\n</div>\r\n<app-loader *ngIf=\"isLoading\"></app-loader>\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\n\r\nimport {AddCompanyRoutingModule} from './add-company-routing.module';\r\nimport {AddCompanyComponent} from './add-company.component';\r\nimport {SharedModule} from '../../../shared/shared.module';\r\n\r\n\r\n@NgModule({\r\n    declarations: [AddCompanyComponent],\r\n    imports: [\r\n        CommonModule,\r\n        SharedModule,\r\n        AddCompanyRoutingModule\r\n    ]\r\n})\r\nexport class AddCompanyModule {\r\n}\r\n"],"sourceRoot":"webpack:///"}