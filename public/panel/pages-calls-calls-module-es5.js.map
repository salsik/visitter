{"version":3,"sources":["webpack:///src/app/pages/calls/calls-routing.module.ts","webpack:///src/app/pages/calls/calls.component.html","webpack:///src/app/pages/calls/calls.component.ts","webpack:///src/app/pages/calls/calls.module.ts"],"names":["routes","path","component","data","title","CallsRoutingModule","forChild","imports","exports","CallsComponent","injector","isLoading","page","itemsCount","rate","companies","selectedId","authService","currentUser","company_id","type","getCompanies","getCalls","item","ev","event","stopPropagation","utilService","confirmationDialog","translateService","instant","result","subscribe","res","callsService","removeCall","id","err","console","log","showConnectionErrorToast","dataSource","key","load","loadOptions","toPromise","then","content","totalCount","total","groupCount","per_page","selected","Array","from","length","v","k","document","getElementById","click","date","d","Date","toISOString","substring","p","split","three","toString","viewDetails","selector","templateUrl","styleUrls","CallsModule","declarations"],"mappings":"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","file":"pages-calls-calls-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport {CallsComponent} from './calls.component';\r\n\r\n\r\nconst routes: Routes = [{\r\n  path: '',\r\n  component: CallsComponent,\r\n  data: {\r\n    title: 'Calls'\r\n  }\r\n}];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class CallsRoutingModule { }\r\n","<div class=\"no-scroll\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-2 col-sm-12 company-list\" *ngIf=\"authService.currentUser.type === 'super_admin'\">\r\n            <h2>{{'calls.companies'  | translate}}</h2>\r\n            <div *ngFor=\"let item of companies\" [ngClass]=\"selectedId === item.id && 'active'\" class=\"company-item\"\r\n                 (click)=\"setSelectedCompany(item.id)\">\r\n                <p>{{item.companyName}}</p>\r\n            </div>\r\n        </div>\r\n        <div [ngClass]=\"authService.currentUser.type === 'super_admin' ? 'col-md-10' : 'col-md-12'\" class=\" col-sm-12\">\r\n            <dx-data-grid class=\"datagrid\" [dataSource]=\"dataSource\"\r\n                          [showBorders]=\"true\"\r\n                          [hoverStateEnabled]=\"true\"\r\n                          (onRowClick)=\"viewDetails($event)\" [noDataText]=\"'menu.noData' | translate\"\r\n                          [showRowLines]=\"true\">\r\n                <dxo-load-panel [text]=\"'menu.loading' | translate\"\r\n                                [enabled]=\"true\">\r\n                </dxo-load-panel>\r\n                <dxo-remote-operations\r\n                        [groupPaging]=\"true\">\r\n                </dxo-remote-operations>\r\n                <dxo-paging [(pageIndex)]=\"page\" [(pageSize)]=\"itemsCount\"></dxo-paging>\r\n                <dxo-pager\r\n                        [showPageSizeSelector]=\"true\"\r\n                        [allowedPageSizes]=\"[5, 10]\"\r\n                ></dxo-pager>\r\n                <dxo-sorting mode=\"multiple\"></dxo-sorting>\r\n                <dxo-filter-row></dxo-filter-row>\r\n                <dxo-header-filter></dxo-header-filter>\r\n                <dxi-column dataField=\"department.label\" [caption]=\"'calls.department' | translate\" alignment=\"center\"\r\n                            [allowSorting]=\"true\"></dxi-column>\r\n                <dxi-column dataField=\"date\" cellTemplate=\"dateTemplate\" [caption]=\"'calls.date' | translate\"\r\n                            alignment=\"center\"\r\n                            [allowSorting]=\"true\"></dxi-column>\r\n                <dxi-column [width]=\"150\" dataField=\"actions\" caption=\"Actions\" alignment=\"center\"\r\n                            cellTemplate=\"actionTemplate\"\r\n                            [allowSorting]=\"true\"></dxi-column>\r\n                <div *dxTemplate=\"let r of 'actionTemplate'\">\r\n                    <dx-button class=\"remove-btn\" icon=\"trash\" (onClick)=\"deleteItem(r.data, $event)\">\r\n                    </dx-button>\r\n                </div>\r\n                <div *dxTemplate=\"let r of 'dateTemplate'\">\r\n                    <p>{{getDate(r.data?.created_at)}} / {{getTime(r.data?.created_at)}}</p>\r\n                </div>\r\n            </dx-data-grid>\r\n        </div>\r\n    </div>\r\n    <app-loader *ngIf=\"isLoading\"></app-loader>\r\n    <button style=\"visibility: hidden\" id=\"showModal\" data-toggle=\"modal\" data-target=\"#default-modal\"></button>\r\n    <div class=\"modal fade\" id=\"default-modal\">\r\n        <div class=\"modal-dialog\" role=\"document\">\r\n            <div class=\"modal-content\">\r\n                <div class=\"modal-header\">\r\n                    <h4>Call Details</h4><span>\r\n            </span>\r\n                </div>\r\n                <div class=\"modal-body\">\r\n                    <!--                <h4>Note</h4>\r\n                                    <p>{{selected?.note}}</p>-->\r\n                    <h4>Department</h4>\r\n                    <p>{{selected?.department?.label}}</p>\r\n                    <h4>Date / Time</h4>\r\n                    <p>{{getDate(selected?.created_at)}} / {{getTime(selected?.created_at)}}</p>\r\n                    <h4>Selfie</h4>\r\n                    <img style=\"    width: 65%;\r\n    height: 277px;\r\n    object-fit: contain;\" [src]=\"selected?.image\"/>\r\n                </div>\r\n                <div class=\"modal-footer no-border\">\r\n                    <div class=\"text-right\">\r\n                        <button class=\"btn btn-primary btn-md\" data-dismiss=\"modal\">OK</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import {Component, Injector, OnInit, ViewEncapsulation} from '@angular/core';\r\nimport DataSource from 'devextreme/data/data_source';\r\nimport {BaseComponent} from '../../../@calls/components/base/base.component';\r\n\r\n@Component({\r\n    selector: 'app-calls',\r\n    templateUrl: './calls.component.html',\r\n    styleUrls: ['./calls.component.scss']\r\n})\r\nexport class CallsComponent extends BaseComponent implements OnInit {\r\n    dataSource: any;\r\n    isLoading = false;\r\n    page = 0;\r\n    itemsCount = 10;\r\n    selected: any;\r\n    rate: any = [];\r\n    companies: any = [];\r\n    selectedId = this.authService.currentUser?.company_id;\r\n\r\n    constructor(injector: Injector) {\r\n        super(injector);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        // this.getCalls();\r\n        if (this.authService.currentUser.type === 'super_admin') {\r\n            this.getCompanies();\r\n        } else {\r\n            this.getCalls();\r\n        }\r\n    }\r\n\r\n    async deleteItem(item, ev) {\r\n        ev.event.stopPropagation();\r\n        const result = await this.utilService.confirmationDialog(this.translateService.instant('app.warning'),\r\n            this.translateService.instant('app.removeCaution'));\r\n        result.subscribe((res) => {\r\n            if (res) {\r\n                this.isLoading = true;\r\n                this.callsService.removeCall(item.id).subscribe((res) => {\r\n                    this.getCalls();\r\n                    this.isLoading = false;\r\n                }, (err) => {\r\n                    console.log(err);\r\n                    this.isLoading = false;\r\n                    this.utilService.showConnectionErrorToast();\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    getCalls(): void {\r\n        this.dataSource = new DataSource({\r\n            key: 'id',\r\n            load: (loadOptions) => this.callsService.getCalls(this.page, this.itemsCount, this.selectedId).toPromise()\r\n                .then(result => {\r\n                    this.isLoading = false;\r\n                    return {\r\n                        data: result.content.data.data,\r\n                        totalCount: result.content.data.total,\r\n                        groupCount: result.content.data.per_page\r\n                    };\r\n                })\r\n        });\r\n    }\r\n\r\n    viewDetails(item) {\r\n        this.selected = item.data;\r\n        this.rate = Array.from({length: +this.selected.rate}, (v, k) => k);\r\n        document.getElementById('showModal').click();\r\n    }\r\n\r\n    getDate(date): string {\r\n        const d = new Date(date);\r\n        return d.toISOString().substring(0, 10);\r\n    }\r\n\r\n    getTime(date): string {\r\n        const d = new Date(date);\r\n        const p = d.toISOString().split('T');\r\n        const three = p[1].substring(0, 5);\r\n        return three.toString();\r\n    }\r\n\r\n    getCompanies(): void {\r\n        this.isLoading = true;\r\n        this.callsService.getCompanies().subscribe((res) => {\r\n            this.companies = res.content.data;\r\n            this.selectedId = this.companies[0].id;\r\n            this.getCalls();\r\n        }, (err) => {\r\n            console.log(err);\r\n        });\r\n    }\r\n\r\n    setSelectedCompany(id: number): void {\r\n        this.selectedId = id;\r\n        this.page = 0;\r\n        this.itemsCount = 10;\r\n        this.getCalls();\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { CallsRoutingModule } from './calls-routing.module';\r\nimport {CallsComponent} from './calls.component';\r\nimport {SharedModule} from '../../shared/shared.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [CallsComponent],\r\n  imports: [\r\n    CommonModule,\r\n    CallsRoutingModule,\r\n    SharedModule\r\n  ]\r\n})\r\nexport class CallsModule { }\r\n"]}