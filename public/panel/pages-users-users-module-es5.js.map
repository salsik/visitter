{"version":3,"sources":["webpack:///src/app/pages/users/users-routing.module.ts","webpack:///src/app/pages/users/users.component.ts","webpack:///src/app/pages/users/users.component.html","webpack:///src/app/pages/users/users.module.ts"],"names":["routes","path","component","data","title","UsersRoutingModule","forChild","imports","exports","UsersComponent","injector","isLoading","departmentSelected","add","userId","type","userForm","fb","group","username","compose","required","login_id","email","password","dep_id","getUsers","getDepartments","changeSelected","item","console","log","userService","removeUser","user_id","subscribe","res","utilService","showDeletedSuccessfullyToast","err","showConnectionErrorToast","dataSource","content","j","setValue","setTimeout","id","document","getElementById","addEventListener","evt","target","selectedIndex","form","f","authService","currentUser","company_id","first_name","last_name","register","resetForm","click","showAddedSuccessfullyToast","updateUser","departmentService","departments","addUser","selector","templateUrl","styleUrls","UsersModule","declarations"],"mappings":"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","file":"pages-users-users-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport {CompaniesComponent} from '../companies/companies.component';\r\nimport {UsersComponent} from './users.component';\r\n\r\n\r\nconst routes: Routes = [{\r\n  path: '',\r\n  component: UsersComponent,\r\n  data: {\r\n    title: 'Users'\r\n  }\r\n}];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class UsersRoutingModule { }\r\n","import {AfterViewInit, Component, Injector, OnInit} from '@angular/core';\r\nimport DataSource from 'devextreme/data/data_source';\r\nimport {BaseComponent} from '../../../@calls/components/base/base.component';\r\nimport {Validators} from '@angular/forms';\r\n\r\n@Component({\r\n    selector: 'app-users',\r\n    templateUrl: './users.component.html',\r\n    styleUrls: ['./users.component.scss']\r\n})\r\nexport class UsersComponent extends BaseComponent implements OnInit, AfterViewInit {\r\n    isLoading = false;\r\n    dataSource: any;\r\n    userForm: any;\r\n    departments: any;\r\n    departmentSelected = false;\r\n    add = true;\r\n    userId = '';\r\n    type = '';\r\n\r\n    constructor(injector: Injector) {\r\n        super(injector);\r\n        this.userForm = this.fb.group({\r\n            username: ['', Validators.compose([Validators.required])],\r\n            login_id: ['', Validators.compose([Validators.required])],\r\n            email: ['', Validators.compose([Validators.required])],\r\n            password: ['', Validators.compose([Validators.required])],\r\n            type: ['', Validators.compose([Validators.required])],\r\n            dep_id: ['']\r\n        });\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.getUsers();\r\n        this.getDepartments();\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.changeSelected();\r\n    }\r\n\r\n    deleteItem(item): void {\r\n        console.log(item);\r\n        this.isLoading = true;\r\n        this.userService.removeUser(item.user_id).subscribe((res) => {\r\n            console.log(res);\r\n            this.getUsers();\r\n            this.utilService.showDeletedSuccessfullyToast();\r\n            this.isLoading = false;\r\n        }, (err) => {\r\n            console.log(err);\r\n            this.isLoading = false;\r\n            this.utilService.showConnectionErrorToast();\r\n        });\r\n    }\r\n\r\n\r\n    getUsers(): void {\r\n        this.userService.getUsers().subscribe((res) => {\r\n            this.dataSource = new DataSource(res.content.data);\r\n        });\r\n    }\r\n\r\n    resetForm() {\r\n        const j = {\r\n            login_id: '',\r\n            username: '',\r\n            email: '',\r\n            password: '',\r\n            type: '',\r\n            dep_id: '',\r\n        };\r\n        this.userForm.setValue(j);\r\n        this.add = true;\r\n        this.departmentSelected = false;\r\n        setTimeout(() => {\r\n            this.changeSelected();\r\n        }, 1000)\r\n    }\r\n\r\n    updateItem(data): void {\r\n        this.add = false;\r\n        const j = {\r\n            username: data.username,\r\n            login_id: data.login_id,\r\n            email: data.email,\r\n            password: data.password,\r\n            type: data.type,\r\n            dep_id: data['dep_id'] ? data['dep_id'] : ''\r\n        };\r\n        this.departmentSelected = !!data['dep_id'];\r\n        this.userId = data.id;\r\n        this.type = data.type;\r\n        console.log(data);\r\n        // this.dep_id = data.id;\r\n        this.userForm.setValue(j);\r\n    }\r\n\r\n    changeSelected() {\r\n        document.getElementById('my-type').addEventListener('change', (evt: any) => {\r\n            console.log('You selected: ', evt.target.selectedIndex);\r\n            this.departmentSelected = +evt.target.selectedIndex === 0;\r\n        });\r\n    }\r\n\r\n    addUser(form, f): void {\r\n        this.isLoading = true;\r\n        form['company_id'] = this.authService.currentUser.company_id;\r\n        form['name'] = form.first_name + ' ' + form.last_name;\r\n        if (this.add) {\r\n            this.authService.register(form).subscribe((res) => {\r\n                console.log(res);\r\n                this.isLoading = false;\r\n                f.resetForm();\r\n                this.getUsers();\r\n                document.getElementById('close').click();\r\n                this.utilService.showAddedSuccessfullyToast();\r\n            }, (err) => {\r\n                this.isLoading = false;\r\n                console.log(err);\r\n                this.utilService.showConnectionErrorToast();\r\n            });\r\n        } else {\r\n            form['id'] = this.userId;\r\n            form['location'] = this.type;\r\n            this.userService.updateUser(form).subscribe((res) => {\r\n                console.log(res);\r\n                this.isLoading = false;\r\n                f.resetForm();\r\n                this.getUsers();\r\n                document.getElementById('close').click();\r\n                this.utilService.showAddedSuccessfullyToast();\r\n            }, (err) => {\r\n                this.isLoading = false;\r\n                console.log(err);\r\n                this.utilService.showConnectionErrorToast();\r\n            });\r\n        }\r\n    }\r\n\r\n    getDepartments(): void {\r\n        this.departmentService.getDepartments().subscribe((res) => {\r\n            this.isLoading = false;\r\n            this.departments = res.content.data;\r\n        }, (err) => {\r\n            this.isLoading = false;\r\n            console.log(err);\r\n            this.utilService.showConnectionErrorToast();\r\n        });\r\n    }\r\n}\r\n","<div class=\"row header-row\">\r\n    <div class=\"col-9 row\"></div>\r\n    <div class=\"col-3 float-end\">\r\n        <dx-button\r\n                data-toggle=\"modal\" data-target=\"#side-modal-r\"\r\n                class=\"add-btn\"\r\n                icon=\"add\"\r\n                stylingMode=\"text\"\r\n                text=\" Add New User\"\r\n                (onClick)=\"resetForm()\"\r\n                type=\"normal\">\r\n        </dx-button>\r\n    </div>\r\n</div>\r\n<dx-data-grid class=\"datagrid\" [dataSource]=\"dataSource\"\r\n              [showBorders]=\"true\"\r\n              [showRowLines]=\"true\">\r\n    <dxo-remote-operations\r\n            [groupPaging]=\"true\">\r\n    </dxo-remote-operations>\r\n    <dxo-pager\r\n            [showPageSizeSelector]=\"true\"\r\n            [allowedPageSizes]=\"[5, 10, 25, 50, 100]\"\r\n    ></dxo-pager>\r\n    <dxo-sorting mode=\"multiple\"></dxo-sorting>\r\n    <dxo-filter-row></dxo-filter-row>\r\n    <dxo-header-filter></dxo-header-filter>\r\n    <dxi-column dataField=\"username\" caption=\"Username\" alignment=\"center\"\r\n                [allowSorting]=\"true\"></dxi-column>\r\n    <dxi-column dataField=\"login_id\" caption=\"User ID\" alignment=\"center\"\r\n                [allowSorting]=\"true\"></dxi-column>\r\n    <dxi-column dataField=\"type\" caption=\"User Type\" alignment=\"center\" cellTemplate=\"typeTemplate\"\r\n                [allowSorting]=\"true\"></dxi-column>\r\n    <dxi-column dataField=\"actions\" caption=\"Actions\" alignment=\"center\" cellTemplate=\"actionTemplate\"\r\n                [allowSorting]=\"true\" [width]=\"100\"></dxi-column>\r\n    <div *dxTemplate=\"let r of 'typeTemplate'\" class=\"cellTemplate\">\r\n        <p [ngClass]=\"r.data.type\">{{r.data.type}}</p>\r\n    </div>\r\n    <div *dxTemplate=\"let r of 'actionTemplate'\">\r\n        <dx-button class=\"remove-btn\" icon=\"minus\" (onClick)=\"deleteItem(r.data)\">\r\n        </dx-button>\r\n        <dx-button class=\"update-btn\" icon=\"edit\" (onClick)=\"updateItem(r.data)\" data-toggle=\"modal\"\r\n                   data-target=\"#side-modal-r\">\r\n        </dx-button>\r\n    </div>\r\n</dx-data-grid>\r\n\r\n\r\n<div class=\"modal slide-in-right modal-right fade \" id=\"side-modal-r\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"side-modal-wrapper\">\r\n                <div class=\"vertical-align\">\r\n                    <div class=\"table-cell\">\r\n                        <div class=\"pdd-horizon-15\">\r\n                            <h4>{{add ? 'Create' : 'Update'}} User</h4>\r\n                            <p class=\"mrg-btm-15 font-size-13\">Enter this details to {{add ? 'Create a new' : 'Update'}} user for your company</p>\r\n                            <form [formGroup]=\"userForm\" #f=\"ngForm\"\r\n                                  (ngSubmit)=\"userForm.valid && addUser(userForm.value, f)\">\r\n                                <div class=\"form-group\">\r\n                                    <input formControlName=\"username\" type=\"text\" class=\"form-control\"\r\n                                           placeholder=\"Username\">\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <input formControlName=\"login_id\" type=\"text\" class=\"form-control\"\r\n                                           placeholder=\"Login ID\">\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <input formControlName=\"email\" type=\"text\" class=\"form-control\" placeholder=\"Email\">\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <input formControlName=\"password\" type=\"password\" class=\"form-control\"\r\n                                           placeholder=\"Password\">\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <p class=\"mrg-btm-15 font-size-13\">Choose Type</p>\r\n                                    <select *ngIf=\"!add\"  [attr.disabled]=\"!add\" id=\"my-type\" formControlName=\"type\" class=\"form-control\" placeholder=\"Type\">\r\n                                        <option value=\"reception\">Reception</option>\r\n                                        <option value=\"customer\">Customer</option>\r\n                                    </select>\r\n                                    <select *ngIf=\"add\" id=\"my-type\" formControlName=\"type\" class=\"form-control\" placeholder=\"Type\">\r\n                                        <option value=\"reception\">Reception</option>\r\n                                        <option value=\"customer\">Customer</option>\r\n                                    </select>\r\n                                </div>\r\n                                <div *ngIf=\"departmentSelected\" class=\"form-group\">\r\n                                    <p class=\"mrg-btm-15 font-size-13\">Choose Department</p>\r\n                                    <select formControlName=\"dep_id\" class=\"form-control\" placeholder=\"Type\">\r\n                                        <option *ngFor=\"let item of departments\"\r\n                                                [value]=\"item.id\">{{item.label}}</option>\r\n                                    </select>\r\n                                </div>\r\n                                <button type=\"submit\" class=\"btn btn-info btn-md\">{{add ? 'Add' : 'Update'}}</button>\r\n                                <a id=\"close\" style=\"visibility: hidden\" href=\"\" data-dismiss=\"modal\"\r\n                                   class=\"btn btn-info\">Close!</a>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<app-loader *ngIf=\"isLoading\"></app-loader>\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\n\r\nimport {UsersRoutingModule} from './users-routing.module';\r\nimport {SharedModule} from '../../shared/shared.module';\r\nimport {UsersComponent} from './users.component';\r\n\r\n\r\n@NgModule({\r\n    declarations: [UsersComponent],\r\n    imports: [\r\n        CommonModule,\r\n        SharedModule,\r\n        UsersRoutingModule\r\n    ]\r\n})\r\nexport class UsersModule {\r\n}\r\n"]}