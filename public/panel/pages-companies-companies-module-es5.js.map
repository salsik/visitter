{"version":3,"sources":["webpack:///src/app/pages/companies/companies-routing.module.ts","webpack:///src/app/pages/companies/companies.component.html","webpack:///src/app/pages/companies/companies.component.ts","webpack:///src/app/pages/companies/companies.module.ts"],"names":["routes","path","component","data","title","CompaniesRoutingModule","forChild","imports","exports","CompaniesComponent","injector","isLoading","getCompanies","item","utilService","confirmationDialog","translateService","instant","result","subscribe","res","companyService","removeCompany","id","showDeletedSuccessfullyToast","err","console","log","showConnectionErrorToast","dataSource","content","router","navigateByUrl","state","edit","then","selector","templateUrl","styleUrls","CompaniesModule","declarations"],"mappings":"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","file":"pages-companies-companies-module-es5.js","sourcesContent":["import {NgModule} from '@angular/core';\r\nimport {Routes, RouterModule} from '@angular/router';\r\nimport {CompaniesComponent} from './companies.component';\r\n\r\n\r\nconst routes: Routes = [{\r\n    path: '',\r\n    component: CompaniesComponent,\r\n    data: {\r\n        title: 'Companies'\r\n    }\r\n}];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class CompaniesRoutingModule {\r\n}\r\n","<div class=\"row header-row\">\r\n    <div class=\"col-9 row\"></div>\r\n    <div class=\"col-3 float-end\">\r\n        <dx-button\r\n                data-toggle=\"modal\" data-target=\"#side-modal-r\"\r\n                class=\"add-btn\"\r\n                icon=\"add\"\r\n                routerLink=\"/pages/add-company\"\r\n                stylingMode=\"text\"\r\n                text=\" {{'companies.addNewCompany' | translate}}\"\r\n                type=\"normal\">\r\n        </dx-button>\r\n    </div>\r\n</div>\r\n<dx-data-grid class=\"datagrid\" [dataSource]=\"dataSource\"\r\n              [showBorders]=\"true\" [noDataText]=\"'menu.noData' | translate\"\r\n              [showRowLines]=\"true\">\r\n    <dxo-load-panel [text]=\"'menu.loading' | translate\"\r\n                    [enabled]=\"true\">\r\n    </dxo-load-panel>\r\n    <dxo-remote-operations\r\n            [groupPaging]=\"true\">\r\n    </dxo-remote-operations>\r\n    <dxo-pager\r\n            [showPageSizeSelector]=\"true\"\r\n            [allowedPageSizes]=\"[5, 10, 25, 50, 100]\"\r\n    ></dxo-pager>\r\n    <dxo-sorting mode=\"multiple\"></dxo-sorting>\r\n    <dxo-filter-row></dxo-filter-row>\r\n    <dxo-header-filter></dxo-header-filter>\r\n    <dxi-column dataField=\"username\" [caption]=\"'companies.username' | translate\" alignment=\"center\"\r\n                [allowSorting]=\"true\"></dxi-column>\r\n    <dxi-column dataField=\"email\" [caption]=\"'companies.email' | translate\" alignment=\"center\"\r\n                [allowSorting]=\"true\"></dxi-column>\r\n    <dxi-column dataField=\"login_id\" [caption]=\"'companies.loginId' | translate\" alignment=\"center\"\r\n                [allowSorting]=\"true\"></dxi-column>\r\n    <dxi-column dataField=\"companyName\" [caption]=\"'companies.companyName' | translate\" alignment=\"center\"\r\n                [allowSorting]=\"true\"></dxi-column>\r\n    <dxi-column dataField=\"actions\" [caption]=\"'companies.action' | translate\" alignment=\"center\" cellTemplate=\"actionTemplate\"\r\n                [allowSorting]=\"true\" [width]=\"100\"></dxi-column>\r\n    <div *dxTemplate=\"let r of 'actionTemplate'\">\r\n        <dx-button class=\"update-btn\" icon=\"edit\" (onClick)=\"updateItem(r.data)\" data-toggle=\"modal\"\r\n                   data-target=\"#side-modal-r\">\r\n        </dx-button>\r\n        <dx-button class=\"remove-btn\" icon=\"trash\" (onClick)=\"deleteItem(r.data)\">\r\n        </dx-button>\r\n    </div>\r\n</dx-data-grid>\r\n<app-loader *ngIf=\"isLoading\"></app-loader>\r\n","import {Component, Injector, OnInit} from '@angular/core';\r\nimport DataSource from 'devextreme/data/data_source';\r\nimport {BaseComponent} from '../../../@calls/components/base/base.component';\r\n\r\n@Component({\r\n    selector: 'app-companies',\r\n    templateUrl: './companies.component.html',\r\n    styleUrls: ['./companies.component.scss']\r\n})\r\nexport class CompaniesComponent extends BaseComponent implements OnInit {\r\n    isLoading = false;\r\n    dataSource: any;\r\n\r\n    constructor(injector: Injector) {\r\n        super(injector);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.getCompanies();\r\n    }\r\n\r\n    async deleteItem(item) {\r\n        const result = await this.utilService.confirmationDialog(this.translateService.instant('app.warning'),\r\n            this.translateService.instant('app.removeCaution'));\r\n        result.subscribe((res) => {\r\n            if (res) {\r\n                this.isLoading = true;\r\n                this.companyService.removeCompany(item.id).subscribe((res) => {\r\n                    this.getCompanies();\r\n                    this.utilService.showDeletedSuccessfullyToast();\r\n                    this.isLoading = false;\r\n                }, (err) => {\r\n                    console.log(err);\r\n                    this.isLoading = false;\r\n                    this.utilService.showConnectionErrorToast();\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    getCompanies(): void {\r\n        this.companyService.getCompanies().subscribe((res) => {\r\n            this.dataSource = new DataSource(res.content.data);\r\n        });\r\n    }\r\n\r\n    updateItem(data): void {\r\n        this.router.navigateByUrl('/pages/add-company', {state: {edit: true, data}}).then();\r\n    }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\n\r\nimport {CompaniesRoutingModule} from './companies-routing.module';\r\nimport {CompaniesComponent} from './companies.component';\r\nimport {SharedModule} from '../../shared/shared.module';\r\n\r\n\r\n@NgModule({\r\n    declarations: [CompaniesComponent],\r\n    imports: [\r\n        CommonModule,\r\n        SharedModule,\r\n        CompaniesRoutingModule\r\n    ]\r\n})\r\nexport class CompaniesModule {\r\n}\r\n"]}