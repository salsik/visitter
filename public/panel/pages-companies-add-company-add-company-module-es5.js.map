{"version":3,"sources":["webpack:///src/app/pages/companies/add-company/add-company-routing.module.ts","webpack:///src/app/pages/companies/add-company/add-company.component.ts","webpack:///src/app/pages/companies/add-company/add-company.component.html","webpack:///src/app/pages/companies/add-company/add-company.module.ts"],"names":["routes","path","component","data","title","AddCompanyRoutingModule","forChild","imports","exports","AddCompanyComponent","injector","isLoading","isEdit","errors","router","getCurrentNavigation","extras","state","initComponent","form","fb","group","email","required","password","username","login_id","type","companyName","j","setValue","ngForm","id","user_id","authService","updateCompany","subscribe","res","result","mytemplateForm","reset","utilService","showAddedSuccessfullyToast","navigateByUrl","then","error","error_description","key","push","err","console","log","showConnectionErrorToast","register","selector","templateUrl","styleUrls","AddCompanyModule","declarations"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAKA,QAAMA,MAAM,GAAW,CAAC;AACtBC,UAAI,EAAE,EADgB;AAEtBC,eAAS,EAAE,0EAFW;AAGtBC,UAAI,EAAE;AACJC,aAAK,EAAE;AADH;AAHgB,KAAD,CAAvB;;QAYaC,uB;;;;;YAAAA;;;;yBAAAA,uB;AAAuB,O;AAAA,gBAHzB,CAAC,6DAAaC,QAAb,CAAsBN,MAAtB,CAAD,CAGyB,EAFxB,4DAEwB;;;;0HAAvBK,uB,EAAuB;AAAA;AAAA,kBAFxB,4DAEwB;AAAA,O;AAFZ,K;;;;;sEAEXA,uB,EAAuB;cAJnC,sDAImC;eAJ1B;AACRE,iBAAO,EAAE,CAAC,6DAAaD,QAAb,CAAsBN,MAAtB,CAAD,CADD;AAERQ,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAI0B,Q;;;;;;;;;;;;;;;;;;ACjBpC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;AC6BQ;;AAA6C;;AAAQ;;;;;;AAAR;;AAAA;;;;;;AAFjD;;AACI;;AAAI;;AAAO;;AACX;;AACJ;;;;;;AADqB;;AAAA;;;;;;AAGzB;;;;QDtBaC,mB;;;;;AAQT,mCAAYC,QAAZ,EAAgC;AAAA;;AAAA;;AAC5B,iGAAMA,QAAN;AAPJ,cAAAC,SAAA,GAAY,KAAZ;AACA,cAAAC,MAAA,GAAS,KAAT;AAGA,cAAAC,MAAA,GAAS,EAAT;;AAII,YAAI,MAAKC,MAAL,CAAYC,oBAAZ,GAAmCC,MAAnC,CAA0CC,KAA9C,EAAqD;AACjD,gBAAKd,IAAL,GAAY,MAAKW,MAAL,CAAYC,oBAAZ,GAAmCC,MAAnC,CAA0CC,KAA1C,CAAgDd,IAA5D;AACA,gBAAKS,MAAL,GAAc,IAAd;AACH;;AAL2B;AAM/B;;;;mCAEO;AACJ,eAAKM,aAAL;AACH;;;wCAEY;AACT,eAAKC,IAAL,GAAY,KAAKC,EAAL,CAAQC,KAAR,CAAc;AACtBC,iBAAK,EAAE,CAAC,EAAD,EAAK,0DAAWC,QAAhB,CADe;AAEtBC,oBAAQ,EAAE,CAAC,EAAD,EAAK,0DAAWD,QAAhB,CAFY;AAGtBE,oBAAQ,EAAE,CAAC,EAAD,EAAK,0DAAWF,QAAhB,CAHY;AAItBG,oBAAQ,EAAE,CAAC,EAAD,EAAK,0DAAWH,QAAhB,CAJY;AAKtBI,gBAAI,EAAE,CAAC,OAAD,EAAU,0DAAWJ,QAArB,CALgB;AAMtBK,uBAAW,EAAE,CAAC,EAAD,EAAK,0DAAWL,QAAhB;AANS,WAAd,CAAZ;;AAQA,cAAI,KAAKX,MAAT,EAAiB;AACb,gBAAMiB,CAAC,GAAG;AACNP,mBAAK,EAAE,KAAKnB,IAAL,CAAUmB,KADX;AAENE,sBAAQ,EAAE,KAAKrB,IAAL,CAAUqB,QAFd;AAGNC,sBAAQ,EAAE,KAAKtB,IAAL,CAAUsB,QAHd;AAINC,sBAAQ,EAAE,KAAKvB,IAAL,CAAUuB,QAJd;AAKNC,kBAAI,EAAE,OALA;AAMNC,yBAAW,EAAE,KAAKzB,IAAL,CAAUyB;AANjB,aAAV,CADa,CASb;;AACA,iBAAKT,IAAL,CAAUW,QAAV,CAAmBD,CAAnB;AACH;AACJ;;;iCAEQV,I,EAAMY,M,EAAQ;AAAA;;AACnB,eAAKlB,MAAL,GAAc,EAAd;AACA,eAAKF,SAAL,GAAiB,IAAjB;;AACA,cAAI,KAAKC,MAAT,EAAiB;AACbO,gBAAI,CAAC,IAAD,CAAJ,GAAa,KAAKhB,IAAL,CAAU6B,EAAvB;AACAb,gBAAI,CAAC,SAAD,CAAJ,GAAkB,KAAKhB,IAAL,CAAU8B,OAA5B;AACA,iBAAKC,WAAL,CAAiBC,aAAjB,CAA+BhB,IAA/B,EAAqCiB,SAArC,CAA+C,UAACC,GAAD,EAAS;AACpD,kBAAIA,GAAG,CAACC,MAAJ,KAAe,SAAnB,EAA8B;AAC1B,sBAAI,CAAC3B,SAAL,GAAiB,KAAjB;AACA;;;AAEA,sBAAI,CAAC4B,cAAL,CAAoBC,KAApB;;AACA,sBAAI,CAACC,WAAL,CAAiBC,0BAAjB;;AACA,sBAAI,CAAC5B,MAAL,CAAY6B,aAAZ,CAA0B,iBAA1B,EAA6CC,IAA7C;AACH,eAPD,MAOO;AACH,oBAAMC,KAAK,GAAGR,GAAG,CAACS,iBAAlB;AACA,oBAAIC,GAAJ;AACA,sBAAI,CAACpC,SAAL,GAAiB,KAAjB;;AACA,qBAAKoC,GAAL,IAAYF,KAAZ,EAAmB;AACf,sBAAI,OAAOA,KAAK,CAACE,GAAD,CAAZ,KAAsB,QAA1B,EAAoC;AAChC,wBAAIF,KAAK,CAACE,GAAD,CAAL,KAAe,OAAnB,EAA4B;AACxB,4BAAI,CAAClC,MAAL,CAAYmC,IAAZ,CAAiBH,KAAK,CAACE,GAAD,CAAtB;AACH;AACJ,mBAJD,MAIO,IAAI,OAAOF,KAAK,CAACE,GAAD,CAAZ,KAAsB,QAA1B,EAAoC;AACvC,wBAAIF,KAAK,CAAC,CAAD,CAAL,KAAa,OAAjB,EAA0B;AACtB,4BAAI,CAAChC,MAAL,CAAYmC,IAAZ,CAAiB,yBAAjB;AACH,qBAFD,MAEO;AACH,4BAAI,CAACnC,MAAL,CAAYmC,IAAZ,CAAiBH,KAAK,CAACE,GAAD,CAAL,CAAW,CAAX,CAAjB;AACH;AACJ,mBANM,MAMA;AACH,0BAAI,CAAClC,MAAL,CAAYmC,IAAZ,CAAiB,yBAAjB;AACH;AACJ;AACJ;AACJ,aA5BD,EA4BG,UAACC,GAAD,EAAS;AACRC,qBAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,oBAAI,CAACtC,SAAL,GAAiB,KAAjB;;AACA,oBAAI,CAAC8B,WAAL,CAAiBW,wBAAjB;AACH,aAhCD;AAiCH,WApCD,MAoCO;AACH,iBAAKlB,WAAL,CAAiBmB,QAAjB,CAA0BlC,IAA1B,EAAgCiB,SAAhC,CAA0C,UAACC,GAAD,EAAS;AAC/C,kBAAIA,GAAG,CAACC,MAAJ,KAAe,SAAnB,EAA8B;AAC1B,sBAAI,CAAC3B,SAAL,GAAiB,KAAjB;AACA;;;AAEA,sBAAI,CAAC4B,cAAL,CAAoBC,KAApB;;AACA,sBAAI,CAACC,WAAL,CAAiBC,0BAAjB;;AACA,sBAAI,CAAC5B,MAAL,CAAY6B,aAAZ,CAA0B,iBAA1B;AACH,eAPD,MAOO;AACH,oBAAME,KAAK,GAAGR,GAAG,CAACS,iBAAlB;AACA,oBAAIC,GAAJ;AACA,sBAAI,CAACpC,SAAL,GAAiB,KAAjB;;AACA,qBAAKoC,GAAL,IAAYF,KAAZ,EAAmB;AACf,sBAAI,OAAOA,KAAK,CAACE,GAAD,CAAZ,KAAsB,QAA1B,EAAoC;AAChC,wBAAIF,KAAK,CAACE,GAAD,CAAL,KAAe,OAAnB,EAA4B;AACxB,4BAAI,CAAClC,MAAL,CAAYmC,IAAZ,CAAiBH,KAAK,CAACE,GAAD,CAAtB;AACH;AACJ,mBAJD,MAIO,IAAI,OAAOF,KAAK,CAACE,GAAD,CAAZ,KAAsB,QAA1B,EAAoC;AACvC,wBAAIF,KAAK,CAAC,CAAD,CAAL,KAAa,OAAjB,EAA0B;AACtB,4BAAI,CAAChC,MAAL,CAAYmC,IAAZ,CAAiB,yBAAjB;AACH,qBAFD,MAEO;AACH,4BAAI,CAACnC,MAAL,CAAYmC,IAAZ,CAAiBH,KAAK,CAACE,GAAD,CAAL,CAAW,CAAX,CAAjB;AACH;AACJ,mBANM,MAMA;AACH,0BAAI,CAAClC,MAAL,CAAYmC,IAAZ,CAAiB,yBAAjB;AACH;AACJ;AACJ;AACJ,aA5BD,EA4BG,UAACC,GAAD,EAAS;AACRC,qBAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,oBAAI,CAACtC,SAAL,GAAiB,KAAjB;;AACA,oBAAI,CAAC8B,WAAL,CAAiBW,wBAAjB;AACH,aAhCD;AAiCH;AACJ;;;;MArHoC,mF;;;uBAA5B3C,mB,EAAmB,uH;AAAA,K;;;YAAnBA,mB;AAAmB,sC;AAAA;AAAA;;;;;;;;;;;;;;;;;;ACVhC;;AACI;;AACM;AAAA;;AAAA;;AAAA,qCAA0B,IAAA4C,QAAA,sBAA1B;AAAsD,WAAtD;;AACF;;AACI;;;;AAEJ;;AACA;;AACI;;;;AAEJ;;AACA;;AACI;;;;AAEJ;;AACA;;AACI;;;;AAEJ;;AACA;;AACI;;;;AAEJ;;AACA;;AACI;;AAA2C;;;;AAAkF;;AACjI;;AACJ;;AACA;;AAIJ;;AACA;;;;AA/B2C;;AAAA;;AAIxB;;AAAA;;AAIA;;AAAA;;AAIA;;AAAA;;AAIA;;AAAA;;AAIA;;AAAA;;AAGoC;;AAAA;;AAG/B;;AAAA;;AAKZ;;AAAA;;;;;;;;;;sEDtBC5C,mB,EAAmB;cAL/B,uDAK+B;eALrB;AACP6C,kBAAQ,EAAE,iBADH;AAEPC,qBAAW,EAAE,8BAFN;AAGPC,mBAAS,EAAE,CAAC,8BAAD;AAHJ,S;AAKqB,Q;;;;;;gBAK3B,uD;iBAAU,Q;;;;;;;;;;;;;;;;;;;;AEff;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAgBaC,gB;;;;;YAAAA;;;;yBAAAA,gB;AAAgB,O;AAAA,gBANhB,CACL,4DADK,EAEL,kEAFK,EAGL,mFAHK,CAMgB;;;;0HAAhBA,gB,EAAgB;AAAA,uBAPV,0EAOU;AAPS,kBAE9B,4DAF8B,EAG9B,kEAH8B,EAI9B,mFAJ8B;AAOT,O;AAHE,K;;;;;sEAGlBA,gB,EAAgB;cAR5B,sDAQ4B;eARnB;AACNC,sBAAY,EAAE,CAAC,0EAAD,CADR;AAENnD,iBAAO,EAAE,CACL,4DADK,EAEL,kEAFK,EAGL,mFAHK;AAFH,S;AAQmB,Q","file":"pages-companies-add-company-add-company-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport {AddCompanyComponent} from './add-company.component';\r\n\r\n\r\nconst routes: Routes = [{\r\n  path: '',\r\n  component: AddCompanyComponent,\r\n  data: {\r\n    title: 'Add Company'\r\n  }\r\n}];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AddCompanyRoutingModule { }\r\n","import {Component, Injector, OnInit, ViewChild} from '@angular/core';\r\nimport {FormBuilder, Validators} from '@angular/forms';\r\nimport {BaseComponent} from '../../../../@calls/components/base/base.component';\r\nimport {NgForm} from '@angular/forms';\r\n\r\n@Component({\r\n    selector: 'app-add-company',\r\n    templateUrl: './add-company.component.html',\r\n    styleUrls: ['./add-company.component.scss']\r\n})\r\nexport class AddCompanyComponent extends BaseComponent implements OnInit {\r\n    form: any;\r\n    isLoading = false;\r\n    isEdit = false;\r\n    data: any;\r\n    @ViewChild('ngForm') mytemplateForm: NgForm;\r\n    errors = [];\r\n\r\n    constructor(injector: Injector) {\r\n        super(injector);\r\n        if (this.router.getCurrentNavigation().extras.state) {\r\n            this.data = this.router.getCurrentNavigation().extras.state.data;\r\n            this.isEdit = true;\r\n        }\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.initComponent();\r\n    }\r\n\r\n    initComponent(): void {\r\n        this.form = this.fb.group({\r\n            email: ['', Validators.required],\r\n            password: ['', Validators.required],\r\n            username: ['', Validators.required],\r\n            login_id: ['', Validators.required],\r\n            type: ['admin', Validators.required],\r\n            companyName: ['', Validators.required]\r\n        });\r\n        if (this.isEdit) {\r\n            const j = {\r\n                email: this.data.email,\r\n                password: this.data.password,\r\n                username: this.data.username,\r\n                login_id: this.data.login_id,\r\n                type: 'admin',\r\n                companyName: this.data.companyName\r\n            };\r\n            // this.dep_id = data.id;\r\n            this.form.setValue(j);\r\n        }\r\n    }\r\n\r\n    register(form, ngForm) {\r\n        this.errors = [];\r\n        this.isLoading = true;\r\n        if (this.isEdit) {\r\n            form['id'] = this.data.id;\r\n            form['user_id'] = this.data.user_id;\r\n            this.authService.updateCompany(form).subscribe((res) => {\r\n                if (res.result === 'success') {\r\n                    this.isLoading = false;\r\n                    /* ngForm.resetForm();\r\n                    this.form.onReset(); */\r\n                    this.mytemplateForm.reset();\r\n                    this.utilService.showAddedSuccessfullyToast();\r\n                    this.router.navigateByUrl('pages/companies').then();\r\n                } else {\r\n                    const error = res.error_description;\r\n                    let key;\r\n                    this.isLoading = false;\r\n                    for (key in error) {\r\n                        if (typeof error[key] === 'string') {\r\n                            if (error[key] !== 'error') {\r\n                                this.errors.push(error[key]);\r\n                            }\r\n                        } else if (typeof error[key] === 'object') {\r\n                            if (error[0] === 'error') {\r\n                                this.errors.push('LoginID already exist !');\r\n                            } else {\r\n                                this.errors.push(error[key][0]);\r\n                            }\r\n                        } else {\r\n                            this.errors.push('LoginID already exist !');\r\n                        }\r\n                    }\r\n                }\r\n            }, (err) => {\r\n                console.log(err);\r\n                this.isLoading = false;\r\n                this.utilService.showConnectionErrorToast();\r\n            });\r\n        } else {\r\n            this.authService.register(form).subscribe((res) => {\r\n                if (res.result === 'success') {\r\n                    this.isLoading = false;\r\n                    /* ngForm.resetForm();\r\n                    this.form.onReset(); */\r\n                    this.mytemplateForm.reset();\r\n                    this.utilService.showAddedSuccessfullyToast();\r\n                    this.router.navigateByUrl('pages/companies');\r\n                } else {\r\n                    const error = res.error_description;\r\n                    let key;\r\n                    this.isLoading = false;\r\n                    for (key in error) {\r\n                        if (typeof error[key] === 'string') {\r\n                            if (error[key] !== 'error') {\r\n                                this.errors.push(error[key]);\r\n                            }\r\n                        } else if (typeof error[key] === 'object') {\r\n                            if (error[0] === 'error') {\r\n                                this.errors.push('LoginID already exist !');\r\n                            } else {\r\n                                this.errors.push(error[key][0]);\r\n                            }\r\n                        } else {\r\n                            this.errors.push('LoginID already exist !');\r\n                        }\r\n                    }\r\n                }\r\n            }, (err) => {\r\n                console.log(err);\r\n                this.isLoading = false;\r\n                this.utilService.showConnectionErrorToast();\r\n            });\r\n        }\r\n    }\r\n}\r\n","<div>\r\n    <form class=\"ng-pristine ng-valid row\" [formGroup]=\"form\" #ngForm=\"ngForm\"\r\n          (ngSubmit)=\"form.valid && register(form.value, ngForm)\">\r\n        <div class=\"form-group col-md-6\">\r\n            <input formControlName=\"username\" type=\"text\" class=\"form-control\"\r\n                   [placeholder]=\"'addCompany.username' | translate\">\r\n        </div>\r\n        <div class=\"form-group col-md-6\">\r\n            <input formControlName=\"login_id\" type=\"text\" class=\"form-control\"\r\n                   [placeholder]=\"'addCompany.loginId' | translate\">\r\n        </div>\r\n        <div class=\"form-group col-md-12\">\r\n            <input formControlName=\"companyName\" type=\"text\" class=\"form-control\"\r\n                   [placeholder]=\"'addCompany.companyName' | translate\">\r\n        </div>\r\n        <div class=\"form-group col-md-6\">\r\n            <input formControlName=\"email\" type=\"email\" class=\"form-control\"\r\n                   [placeholder]=\"'addCompany.email' | translate\">\r\n        </div>\r\n        <div class=\"form-group col-md-6\">\r\n            <input formControlName=\"password\" type=\"password\" class=\"form-control\"\r\n                   [placeholder]=\"'addCompany.password' | translate\">\r\n        </div>\r\n        <div class=\"mrg-top-20 width-100 text-right\">\r\n            <button type=\"submit\" class=\"btn btn-info\">{{(isEdit ? 'addCompany.updateCompany' : 'addCompany.createCompany') | translate}}</button>\r\n        </div>\r\n    </form>\r\n    <div class=\"errors\" *ngIf=\"errors.length\">\r\n        <h2>Errors:</h2>\r\n        <p class=\"error\" *ngFor=\"let item of errors\">{{item}}</p>\r\n    </div>\r\n</div>\r\n<app-loader *ngIf=\"isLoading\"></app-loader>\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\n\r\nimport {AddCompanyRoutingModule} from './add-company-routing.module';\r\nimport {AddCompanyComponent} from './add-company.component';\r\nimport {SharedModule} from '../../../shared/shared.module';\r\n\r\n\r\n@NgModule({\r\n    declarations: [AddCompanyComponent],\r\n    imports: [\r\n        CommonModule,\r\n        SharedModule,\r\n        AddCompanyRoutingModule\r\n    ]\r\n})\r\nexport class AddCompanyModule {\r\n}\r\n"]}